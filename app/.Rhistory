PRESS = sum(dList^2)
criList = c(length(subs)+1, subsets[i,],  SSE, R2a,  AIC, Cp, PRESS)
stat=rbind(stat,criList)
}
rownames(stat)=NULL
colnames(stat)=c('p',names(subsets),'SSE','R2a','AIC','Cp','PRESS')
model = NULL
#model$R2 = which.max(stat[,P+3])
model$R2a = which.max(stat[,P+3])
model$Cp = which.min(stat[,P+5])
model$AIC = which.min(stat[,P+4])
#model$BIC = which.min(stat[,P+7])
model$PRESS = which.min(stat[,P+6])
list(model=model, stat=stat)
}
X<-cbind(satisfaction$x1,satisfaction$x2,satisfaction$x3)
y<-satisfaction$y
bestsubset(X,y)
subset<-bestsubset(X,y)
model<-seq(1,8,1)
plot(model,subset$stat[,6],type = "l")
lines(model,subset$stat[,7])
?add
?add1
?step
knitr::opts_chunk$set(echo = TRUE)
satisfaction<-read.table("D:/r/Data Sets/Chapter  6 Data Sets/CH06PR15.txt")
names(satisfaction)<-c("y","x1","x2","x3")
bestsubset <- function(X, y){
P = ncol(X)
subsets = expand.grid( rep( list( 0:1), P))
names(subsets)=paste('X',1:P,sep='')
stat = NULL
SST = sum((y-mean(y))^2)
fitall = lm(y~X)
n = nrow(X)
MSEP = deviance(fitall)/(n-P-1)
for(i in 1:nrow(subsets)){
subs = which(subsets[i,]>0)
if(length(subs)==0) fit = lm(y~1)
else {
subX = X[,which(subsets[i,]>0)]
fit = lm(y~subX)
}
p = length(subs)+1
SSE = deviance(fit)
R2 = 1-SSE/SST
R2a = 1-SSE/SST*(n-1)/(n-p)
Cp = SSE/MSEP - (n-2*p)
AIC = n*log(SSE)-n*log(n)+2*p
BIC = n*log(SSE)-n*log(n)+log(n)*p
X1 = as.matrix(cbind(1,X[,subs]))
hatMat = X1%*%solve(t(X1)%*%X1)%*%t(X1)
eList = fit$residuals
dList = eList/(1-diag(hatMat))
PRESS = sum(dList^2)
criList = c(length(subs)+1, subsets[i,],  SSE, R2a,  AIC, Cp, PRESS)
stat=rbind(stat,criList)
}
rownames(stat)=NULL
colnames(stat)=c('p',names(subsets),'SSE','R2a','AIC','Cp','PRESS')
model = NULL
#model$R2 = which.max(stat[,P+3])
model$R2a = which.max(stat[,P+3])
model$Cp = which.min(stat[,P+5])
model$AIC = which.min(stat[,P+4])
#model$BIC = which.min(stat[,P+7])
model$PRESS = which.min(stat[,P+6])
list(model=model, stat=stat)
}
X<-cbind(satisfaction$x1,satisfaction$x2,satisfaction$x3)
y<-satisfaction$y
bestsubset(X,y)
subset<-bestsubset(X,y)
model<-seq(1,8,1)
plot(model,subset$stat[,6],type = "l")
lines(model,subset$stat[,7])
null=lm(y~1,data=satisfaction)
full=lm(y~x1+x2+x3,data=satisfaction)
step(null, scope=list(upper=full, lower=null), direction='forward', trace=TRUE)
add1(null,~x1+x2+x3,test='F')
fit1<-lm(y~x3,data = satisfaction)
add1(fit1,~x1+x2+x3,test = "F")
fit2<-lm(y~x3+x1,data = satisfaction)
add1(fit2,~x1+x2+x3,test = "F")
1-pf(3,1,43)
fit1<-lm(y~x1,data = satisfaction)
add1(fit1,~x1+x2+x3,test = "F")
fit2<-lm(y~x1+x3,data = satisfaction)
add1(fit2,~x1+x2+x3,test = "F")
add1(null,~x1+x2+x3,test='F')
add1(fit1,~x1+x2+x3,test = "F")
add1(fit2,~x1+x2+x3,test = "F")
fit3<-lm(y~x1+x2+x3,data = satisfaction)
drop1(fit3,~1,test = "F")
fit3<-lm(y~x1+x2+x3,data = satisfaction)
drop1(fit3,test = "F")
fit4<-lm(y~x1+x3,data=satisfaction)
drop1(fit4,test="F")
computer<-read.table("D:/r/Data Sets/Chapter  11 Data Sets/CH11PR06.txt")
computer<-read.table("D:/r/Data Sets/Chapter 11 Data Sets/CH11PR06.txt")
computer<-read.table("D:/r/Data Sets/Chapter 11 Data Sets/CH11PR06.txt")
names(computer)<-c("y","x")
computer<-read.table("D:/r/Data Sets/Chapter 11 Data Sets/CH11PR06.txt")
names(computer)<-c("y","x")
fit_c<-lm(y~x,data=computer)
computer<-read.table("D:/r/Data Sets/Chapter 11 Data Sets/CH11PR06.txt")
names(computer)<-c("y","x")
fit_c<-lm(y~x,data=computer)
plot(computer$x,fit_c$residuals)
ind<-order(fit_c$fitted.values)
ind<-order(fit_c$fitted.values)
ind1<-which(ind<=6)
ind2<-which(ind>6)
ind<-order(fit_c$fitted.values)
ind1<-which(ind<=6)
ind2<-which(ind>6)
resi = fit_c$resi
resi1 = resi[ind1]
resi2 = resi[ind2]
d1 = abs(resi1-median(resi1))
d2 = abs(resi2-median(resi2))
t.test(d1,d2)
plot(computer$x,abs(fit_c$residuals))
ind<-order(fit_c$fitted.values)
ind1<-which(ind<=6)
ind2<-which(ind>6)
resi = fit_c$resi
resi1 = resi[ind1]
resi2 = resi[ind2]
d1 = abs(resi1-median(resi1))
d2 = abs(resi2-median(resi2))
t.test(d1,d2)
qt(.975,10)
ind<-order(fit_c$fitted.values)
ind1<-which(ind<=6)
ind2<-which(ind>6)
resi = fit_c$resi
resi1 = resi[ind1]
resi2 = resi[ind2]
d1 = abs(resi1-median(resi1))
d2 = abs(resi2-median(resi2))
t.test(d1,d2,level=0.95)
qt(.975,10)
ind1
ind2
ind<-order(fit_c$fitted.values)
ind1<-which(ind<=6)
ind2<-which(ind>6)
resi = fit_c$residuals
resi1 = resi[ind1]
resi2 = resi[ind2]
d1 = abs(resi1-median(resi1))
d2 = abs(resi2-median(resi2))
t.test(d1,d2,level=0.95)
qt(.975,10)
resi1
ind1
ind2
ind
ind<-order(fit_c$fitted.values)
ind1<-ind[1:6]
ind2<-ind[7:12]
resi = fit_c$residuals
resi1 = resi[ind1]
resi2 = resi[ind2]
d1 = abs(resi1-median(resi1))
d2 = abs(resi2-median(resi2))
t.test(d1,d2,level=0.95)
qt(.975,10)
wlist<-fit_c$fitted^(-2)
wlist<-fit_c$fitted^(-2)
wlist
v=1:12
resid<-fit_c$residuals
fit_v<-lm(reid~v)
v=1:12
resid<-fit_c$residuals
fit_v<-lm(resid~v)
wlist<-fit_v$fitted^(-2)
wlist
resid<-fit_c$residuals
fit_v<-lm(resid~computer$x)
wlist<-fit_v$fitted^(-2)
wlist
v=1:12
resid<-fit_c$residuals
fit_v<-lm(resid~v)
wlist<-fit_v$fitted^(-2)
wlist
resid<-fit_c$residuals
fit_v<-lm(resid~abs(computer$x))
wlist<-fit_v$fitted^(-2)
wlist
fit_v
resid<-abs(fit_c$residuals)
fit_v<-lm(resid~computer$x)
wlist<-fit_v$fitted^(-2)
wlist
resid<-abs(fit_c$residuals)
fit_v<-lm(resid~computer$x)
wlist<-fit_v$fitted^(-2)
wlist
fit_v$coefficients
resid<-abs(fit_c$residuals)
fit_v<-lm(resid~computer$x)
wlist<-fit_v$fitted^(-2)
wlist
fit_v$coefficients
min(wlist)
max(wlist)
wlfit = lm(y~x,data = computer, weights=wlist)
wlfit = lm(y~x,data = computer, weights=wlist)
wlfit$coefficients
fit_c$coefficients
names(fit_c)
satisfaction<-read.table("D:/r/Data Sets/Chapter  6 Data Sets/CH06PR15.txt")
names(satisfaction)<-c("y","x1","x2","x3")
bestsubset <- function(X, y){
P = ncol(X)
subsets = expand.grid( rep( list( 0:1), P))
names(subsets)=paste('X',1:P,sep='')
stat = NULL
SST = sum((y-mean(y))^2)
fitall = lm(y~X)
n = nrow(X)
MSEP = deviance(fitall)/(n-P-1)
for(i in 1:nrow(subsets)){
subs = which(subsets[i,]>0)
if(length(subs)==0) fit = lm(y~1)
else {
subX = X[,which(subsets[i,]>0)]
fit = lm(y~subX)
}
p = length(subs)+1
SSE = deviance(fit)
R2 = 1-SSE/SST
R2a = 1-SSE/SST*(n-1)/(n-p)
Cp = SSE/MSEP - (n-2*p)
AIC = n*log(SSE)-n*log(n)+2*p
BIC = n*log(SSE)-n*log(n)+log(n)*p
X1 = as.matrix(cbind(1,X[,subs]))
hatMat = X1%*%solve(t(X1)%*%X1)%*%t(X1)
eList = fit$residuals
dList = eList/(1-diag(hatMat))
PRESS = sum(dList^2)
criList = c(length(subs)+1, subsets[i,],  SSE, R2a,  AIC, Cp, PRESS)
stat=rbind(stat,criList)
}
rownames(stat)=NULL
colnames(stat)=c('p',names(subsets),'SSE','R2a','AIC','Cp','PRESS')
model = NULL
#model$R2 = which.max(stat[,P+3])
model$R2a = which.max(stat[,P+3])
model$Cp = which.min(stat[,P+5])
model$AIC = which.min(stat[,P+4])
#model$BIC = which.min(stat[,P+7])
model$PRESS = which.min(stat[,P+6])
list(model=model, stat=stat)
}
X<-cbind(satisfaction$x1,satisfaction$x2,satisfaction$x3)
y<-satisfaction$y
bestsubset(X,y)
subset<-bestsubset(X,y)
model<-seq(1,8,1)
par(mfrow=c(2,2))
plot(model,subset$stat[,6],type = "l")
plot(model,subset$stat[,7],type = "l")
plot(model,subset$stat[,8],type = "l")
plot(model,subset$stat[,9],type = "l")
sd(fit_c$coefficients)
sd(fit_c$coefficients[1])
fit_c
summary(fit_c)
summary(fit_c)
summary(fit_v)
summary(fit_c)
summary(wlfit)
resid1<-abs(wlfit$residuals)
fit_v1<-lm(resid1~computer$x)
wlist1<-fit_v1$fitted^(-2)
wlfit2<-lm(y~x,data = computer,weights = wlist1)
resid1<-abs(wlfit$residuals)
fit_v1<-lm(resid1~computer$x)
wlist1<-fit_v1$fitted^(-2)
wlfit2<-lm(y~x,data = computer,weights = wlist1)
wlfit2$coefficients
0.147/sqrt(10.26*0.451/8)
0147/sqrt((0.1+0.42^2/10.16)*0.451/8)
0.1+0.42^2
sqrt(0.2764*0.451/8)
0.147/0.1248281
qt(0.975,8)
qt(0.95,8)
qt(0.995,8)
knitr::opts_chunk$set(echo = TRUE)
x<-c(0.3,1.4,1,-0.3,-0.2,1,2,-1,-0.7,0.7)
y<-c(0.4,0.9,0.4,-0.3,0.3,0.8,0.7,-0.4,-0.2,0.7)
fit<-lm(y~x)
summary(fit)
0.8257*2.306
0.1904-0.147
qt(0.95,8)
sum(fit$residuals^2)
1/2.207
mean(x)
0.451/8*((0.1)^2)
0.1^(1/2)
0.451/8*0.316
1/13.322
1/13.322
0.451/sqrt(8)*0.316
0.451/sqrt(80)
qt(0.975,30)
qt(0.99,12)
x1<-c(0.5,1,1.5,2,2.5,3,3.5,4)
y1<-c(40,41,43,42,44,42,43,42)
fit1<-(y1~x1)
summary(fit1)
x1<-c(0.5,1,1.5,2,2.5,3,3.5,4)
y1<-c(40,41,43,42,44,42,43,42)
fit1<-lm(y1~x1)
summary(fit1)
x1<-c(0.5,1,1.5,2,2.5,3,3.5,4)
y1<-c(40,41,43,42,44,42,43,42)
fit1<-lm(y1~x1)
summary(fit1)
mean(fit1$residuals^2)
mean(x1)
x1<-c(0.5,1,1.5,2,2.5,3,3.5,4)
y1<-c(40,41,43,42,44,42,43,42)
fit1<-lm(y1~x1)
summary(fit1)
mean(fit1$residuals^2)
x0<-mean(x1)
sum((x1-x0)^2)
1/8+2.25*2.25/10.5
plot(cars)
knitr::opts_chunk$set(echo = TRUE)
library(quantmod)
data<-getSymbols("AAPL", auto.assign = F, from = "2018-01-01", to = "2019-01-01")
data$Close
library(quantmod)
symbol<-c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
for (x in symbol)
data<-getSymbols(x, auto.assign = F, from = "2018-01-01", to = "2019-01-01")
library(quantmod)
symbol<-c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
for (x in symbol)
data<-getSymbols(Symbols = x, auto.assign = F, from = "2018-01-01", to = "2019-01-01")
library(quantmod)
symbol<-c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
for (x in symbol)
data<-getSymbols(Symbols = x, auto.assign = F, from = "2018-01-01", to = "2019-01-01")
close_price$x<-data$x.Close
library(quantmod)
symbol<-c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
close_price<-data.frame()
for (x in symbol)
{data<-getSymbols(Symbols = x, auto.assign = F, from = "2018-01-01", to = "2019-01-01")
close_price$x<-data$x.Close
}
library(quantmod)
symbol<-c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
close_price<-data.frame()
for (x in symbol)
{data<-getSymbols(Symbols = x, auto.assign = F, from = "2018-01-01", to = "2019-01-01")
close_price$x<-data$x.Close
}
colnames(data)
library(quantmod)
symbol<-c("MMM","AXP","AAPL","BA","CAT","CVX","CSCO","KO","DWDP","XOM","GS","HD","IBM","INTC","JNJ","JPM","MCD","MRK","MSFT","NKE","PFE","PG","TRV","UNH","UTX","VZ","V","WMT","WBA","DIS")
close_price<-data.frame()
for (x in symbol)
{data<-getSymbols(Symbols = x, auto.assign = F, from = "2018-01-01", to = "2019-01-01")
closeprice=data[,4]
close_price=cbind(close_price,closeprice)
}
View(close_price)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
head(scale)
head.scale()
head(scaled)
View(close_price)
View(close_price)
scale?
?sclae
?scale
scaled<-scale(close_price,center=TRUE, scale=FALSE)
pca<-svd(scaled)
?princomp
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary<-princomp(scaled,cor = FALSE)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary<-princomp(scaled,cor = FALSE)
biplot(summary$scores)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary(pr<-princomp(scaled,cor = FALSE)
loadings(pr)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary(pr)<-princomp(scaled,cor = FALSE)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary(pr<-princomp(scaled,cor = FALSE))
loadings(pr)
plot(pr)
biplot(pr)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary(pr<-princomp(scaled,cor = FALSE))
loadings(pr)
plot(pr)
biplot(pr,pch=0.1)
?biplot
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary(pr<-princomp(scaled,cor = FALSE))
loadings(pr)
plot(pr)
biplot(pr,cex=0.1)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary(pr<-princomp(scaled,cor = FALSE))
loadings(pr)
biplot(pr,cex=0.5)
scaled<-scale(close_price,center=TRUE, scale=FALSE)
summary(pr<-princomp(scaled,cor = FALSE))
loadings(pr)
biplot(pr,cex=0.4)
price<-princomp(scaled,cor = FALSE)
loadings(price)
biplot(price,cex=0.4)
price<-princomp(scaled,cor = TRUE)
loadings(price)
biplot(price,cex=0.4)
colnames(scaled)
n<-nrow(close_price)
return<-(close_price[2:n,]- close_price[1:(n-1),])/close_price[1:(n-1),]
View(close_price)
View(data)
View(return)
n<-nrow(close_price)
return<-((close_price[2:n,]- close_price[1:(n-1),])/close_price[1:(n-1),])
n<-nrow(close_price)
close_price[2:n,]- close_price[1:(n-1),]
#return<-((close_price[2:n,]- close_price[1:(n-1),])/close_price[1:(n-1),])
View(close_price)
n<-nrow(close_price)
close_price[2,]- close_price[1,]
#  return<-((close_price[2:n,]- close_price[1:(n-1),])/close_price[1:(n-1),])
View(close_price)
View(close_price)
close<-as.matrix(close_price)
n<-nrow(close)
return<-((close[2:n,]- close[1:(n-1),])/close[1:(n-1),])
close<-as.matrix(close_price)
n<-nrow(close)
return<-((close[2:n,]- close[1:(n-1),])/close[1:(n-1),])
price<-princomp(return,cor = TRUE)
#loadings(price)
biplot(price,cex=0.4)
screenplot(pr)
screeplot(pr)
screeplot(pr,type = "line")
screeplot(price,type = "line")
screeplot(return,type = "line")
close<-as.matrix(close_price)
n<-nrow(close)
return<-((close[2:n,]- close[1:(n-1),])/close[1:(n-1),])
re<-princomp(return,cor = TRUE)
#loadings(price)
biplot(re,cex=0.4)
screeplot(return,type = "line")
screeplot(re,type = "line")
price<-princomp(scaled,cor = TRUE)
biplot(price,cex=0.4)
screeplot(price,type = "line")
shiny::runApp('D:/github/Fall2016-Proj2-grp2-master/app/final')
runApp('GitHub/Fall2016-Proj2-grp2/app')
runApp('GitHub/Fall2016-Proj2-grp2/app')
runApp('GitHub/Fall2016-Proj2-grp2/app')
score <-  finaldata %>%
filter(!is.na(SCORE)) %>%
group_by(DBA, INSPECTION.YEAR,INSPECTION.MONTH, lat, long) %>%
summarise(score = mean(SCORE))
score <-  finaldata %>%
filter(!is.na(SCORE)) %>%
group_by(DBA, INSPECTION.YEAR, INSPECTION.MONTH, lat, long) %>%
summarise(score = mean(SCORE))
score <-  finaldata %>%
filter(!is.na(SCORE)) %>%
group_by(DBA, INSPECTION.YEAR, INSPECTION.MONTH, lat, long) %>%
summarise(score = mean(SCORE))
score <-  finaldata %>%
filter(!is.na(SCORE)) %>%
group_by(DBA, INSPECTION.YEAR, INSPECTION.MONTH, lat, long) %>%
summarise(score = mean(SCORE))
violation_num <-  finaldata %>%
group_by(DBA, INSPECTION.YEAR) %>%
summarise(count = n())
load("~/GitHub/Spring2019-Proj2-grp3/app/finaldata.RData")
score <-  finaldata %>%
filter(!is.na(SCORE)) %>%
group_by(DBA, INSPECTION.YEAR, INSPECTION.MONTH, lat, long) %>%
summarise(score = mean(SCORE))
shiny::runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
runApp('GitHub/Spring2019-Proj2-grp3/app')
